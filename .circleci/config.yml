version: 2
jobs:
  build:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            apt-get update && apt-get install curl -y
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # This should go into custom primary image, here's only for the sake of explanation
   #   - run:
   #       name: Install Docker Compose
   #       command: |
   #         set -x
   #         curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
   #         chmod +x /usr/local/bin/docker-compose
   #   - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - setup_remote_docker


      - run:
          name: Start test & FAST record
          command: |
            docker network create inner-net \
            && sleep 5 \
            &&  docker run --rm -d --name selenium -p 4444:4444 -e http_proxy='http://fast:8080' -e https_proxy='https://fast:8080' --network inner-net selenium/standalone-firefox:latest \
            && sleep 5 \
            && docker run --name fast -d -e WALLARM_API_TOKEN=kFvxsPg6AemRlYKBoyuYU+3bIXclqWGaj0NRR7YjRjOHDp2atkxPyJH3st+LRlZX -e CI_MODE=recording -e WALLARM_API_HOST=api.wallarm.com -p 8080:8080 --network inner-net --rm wallarm/fast \
            && sleep 5 \
            && docker build -t app-test . \
            && docker run --rm --name app-test --network inner-net -e CAPYBARA_SERVER_HOST=app-test -p 3000:3000 app-test bundle exec rspec spec/features/posts_spec.rb

      - run:
          name: Start FAST tests
          command: |
           # docker network create inner-net \
           # && sleep 5 \
            docker run --rm --name app-test --network inner-net -e CAPYBARA_SERVER_HOST=app-test -p 3000:3000 app-test \
            && sleep 5 \
            && docker run --name fast -e WALLARM_API_TOKEN=kFvxsPg6AemRlYKBoyuYU+3bIXclqWGaj0NRR7YjRjOHDp2atkxPyJH3st+LRlZX -e CI_MODE=testing -e WALLARM_API_HOST=api.wallarm.com -p 8080:8080 --network inner-net -e TEST_POLICY_ID=240 -e TEST_RUN_URI="http://app-test:3000" --rm wallarm/fast \



#            docker run --name fast -e WALLARM_API_TOKEN=kFvxsPg6AemRlYKBoyuYU+3bIXclqWGaj0NRR7YjRjOHDp2atkxPyJH3st+LRlZX -e CI_MODE=testing -e WALLARM_API_HOST=api.wallarm.com -p 8080:8080 --network inner-net -e TEST_POLICY_ID=240 -e TEST_RUN_URI="http://app-test:3000" --rm wallarm/fast \


#      - run:
#          name: Build dockers
#          command: |
#            docker-compose build
#      - run:
#          name: Run specs & record baselines
#          command: |
#            docker-compose up -d -e HTTP_PROXY="fast:8080" selenium \
#            && sleep 5 \
#            && docker run --name fast -e WALLARM_API_TOKEN=kFvxsPg6AemRlYKBoyuYU+3bIXclqWGaj0NRR7YjRjOHDp2atkxPyJH3st+LRlZX -e CI_MODE=recording -e WALLARM_API_HOST=api.wallarm.com -p 8080:8080 wallarm/fast 
#            && docker-compose run --name app-test --service-ports app-test bundle exec rspec spec/features/posts_spec.rb
#      - run:
#          name: Run security tests
#          command: |
#            docker-compose up -d app-test \
#            && docker-compose run --name fast -e CI_MODE=testing -e TEST_RUN_URI=http://app-test:3000 -e BUILD_ID=3001 fast
